version: '2.1'

services:
  opbeans-php-app:
    build: .
    image: opbeans/opbeans-php:latest
    container_name: ${OPBEANS_PHP_APP_CONTAINER_NAME:-opbeans-php-app}
    environment:
      - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME:-Opbeans-PHP}
      - ELASTIC_APM_ENVIRONMENT=${ELASTIC_APM_ENVIRONMENT:-production}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      - ELASTIC_APM_LOG_LEVEL
    depends_on:
      opbeans-php-db:
        condition: service_healthy

  opbeans-php-web:
    image: nginx:latest
    container_name: ${OPBEANS_PHP_WEB_CONTAINER_NAME:-opbeans-php-web}
    volumes:
      - ./:/var/www
      - ./_docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "${OPBEANS_PHP_HOST:-127.0.0.1}:${OPBEANS_PHP_PORT:-8000}:80"
    depends_on:
      - opbeans-php-app

  opbeans-php-db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: opbeans_php
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 8102:3306
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  apm-server:
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION:-7.17.4}
    ports:
      - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
      - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    command: >
      apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E xpack.monitoring.elasticsearch=true
        -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
      retries: 10
      interval: 10s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-7.17.4}
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "path.data=/usr/share/elasticsearch/data/${STACK_VERSION:-7.17.4}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    ports:
      - "127.0.0.1:${ELASTICSEARCH_PORT:-9200}:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION:-7.17.4}
    environment:
      SERVER_NAME: kibana.example.org
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "${KIBANA_HOST:-127.0.0.1}:${KIBANA_PORT:-5601}:5601"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  esdata:
    driver: local
