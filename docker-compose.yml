version: '2.1'

services:
  opbeans-php:
    build:
      context: .
      dockerfile: Dockerfile-one-container
    image: opbeans/opbeans-php:latest
    container_name: ${OPBEANS_PHP_CONTAINER_NAME:-opbeans-php}
    ports:
      - "${OPBEANS_PHP_HOST:-127.0.0.1}:${OPBEANS_PHP_PORT:-8000}:3000"
    environment:
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME:-opbeans-php}
      - ELASTIC_APM_ENVIRONMENT=${ELASTIC_APM_ENVIRONMENT:-demo}
      - ELASTIC_APM_LOG_LEVEL
      - ELASTIC_APM_JS_SERVER_URL=${ELASTIC_APM_JS_SERVER_URL:-http://localhost:8200}
      - ELASTIC_APM_JS_SERVICE_NAME=${ELASTIC_APM_JS_SERVICE_NAME:-opbeans-react}
      - ELASTIC_APM_JS_SERVICE_VERSION
      - DB_HOST=${DB_HOST:-opbeans-php-db-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_DATABASE=opbeans_php_db_database
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=opbeans_php_db_password
      - WEB_DOCUMENT_ROOT=/app/public/
      - OPBEANS_DT_PROBABILITY
      - OPBEANS_SERVICES
    depends_on:
      opbeans-php-db-mysql:
        condition: service_healthy
      apm-server:
        condition: service_healthy
    # from opbeans-ruby
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://localhost:3000/"]
      retries: 10
      interval: 10s

  opbeans-php-db-mysql:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=opbeans_php_db_database
      - MYSQL_ROOT_PASSWORD=opbeans_php_db_password
    ports:
      - 8102:3306
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin", "--host=localhost" ,"ping" ]
      timeout: 20s
      retries: 10

  apm-server:
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION:-7.17.4}
    ports:
      - "${APM_SERVER_HOST:-127.0.0.1}:${APM_SERVER_PORT:-8200}:8200"
      - "${APM_SERVER_MONITOR_HOST:-127.0.0.1}:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    command: >
      apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E xpack.monitoring.elasticsearch=true
        -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
      retries: 10
      interval: 10s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-7.17.4}
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "path.data=/usr/share/elasticsearch/data/${STACK_VERSION:-7.17.4}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    ports:
      - "127.0.0.1:${ELASTICSEARCH_PORT:-9200}:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION:-7.17.4}
    environment:
      SERVER_NAME: kibana.example.org
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "${KIBANA_HOST:-127.0.0.1}:${KIBANA_PORT:-5601}:5601"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      elasticsearch:
        condition: service_healthy

  wait:
    image: busybox
    depends_on:
      opbeans-php:
        condition: service_healthy
